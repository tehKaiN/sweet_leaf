# Compiler
PREFIX = arm-none-eabi-
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

# CC_TARGET = -Og -DDEBUG -g -gdwarf-2
CC_TARGET = -Os -DNDEBUG

# F7-specific stuff
CPU = -mcpu=cortex-m7
FPU = -mfpu=fpv5-sp-d16
FLOAT-ABI = -mfloat-abi=hard
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)
AS_DEFS =
C_DEFS =  \
	-DUSE_HAL_DRIVER \
	-DSTM32F722xx
C_INCLUDES =  \
	-ICore/Inc \
	-IDrivers/STM32F7xx_HAL_Driver/Inc \
	-IDrivers/STM32F7xx_HAL_Driver/Inc/Legacy \
	-IDrivers/CMSIS/Device/ST/STM32F7xx/Include \
	-IDrivers/CMSIS/Include \
	-Isweet_leaf/inc
LDSCRIPT = STM32F722ZETx_FLASH.ld
LIBS = -lc -lm -lnosys
LIBDIR =

ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections
CFLAGS = $(MCU) $(CC_TARGET) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -std=gnu11
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -Wl,-print-memory-usage

# Compile all
: foreach Drivers/STM32F7xx_HAL_Driver/Src/*.c |> ^ Building %f^ $(CC) $(CFLAGS) -c %f -o %o |> build/hal_%B.o
: foreach Core/Src/*.c |> ^ Building %f^ $(CC) $(CFLAGS) -c %f -o %o |> build/core_%B.o
: foreach sweet_leaf/src/*.c |> ^ Building %f^ $(CC) $(CFLAGS) -c %f -o %o |> build/sl_%B.o
: foreach *.s |> ^ Building %f^ $(CC) $(ASLAGS) -c %f -o %o |> build/startup_%B.o

# Link all
: build/*.o |> \
  ^ Linking %o^ $(CC) $(LDFLAGS) %f -o "%o" -Wl,-Map="%O.map" \
  |> bin/sweet_leaf.elf | bin/sweet_leaf.map

# Generate .bin, display sizes
: bin/sweet_leaf.elf |> ^ Printing size info^ arm-none-eabi-size %f |>
: bin/sweet_leaf.elf |> \
    ^ Generating %o^ arm-none-eabi-objcopy -O binary "%f" "%o" \
  |> bin/sweet_leaf.bin
